{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { ErrorCode, InputCallbackParams, MonaPluginEvents } from './type';\n\nconst SDK_NAME_IN_WINDOW = '____MONA_SDK_NAME_IN_WINDOW____';\n\nconst MONA_GLOBAL_STORE = 'monaGlobalStore';\n\nconst emptyHandler = {\n  get: function (_: any, prop: string) {\n    return (data: InputCallbackParams) => {\n      console.info(`非飞鸽容器, ${prop} 方法无法调用`);\n      if (typeof data === 'object') {\n        data?.failed?.({ code: ErrorCode.Unknown, message: '非飞鸽容器' });\n      }\n    };\n  },\n  set: () => false\n};\n\nconst emptyObj = new Proxy({}, emptyHandler);\n\n\nconst handler = {\n  get: function (_: any, prop: string) {\n    if (prop === 'globalStore') {\n      return window?.[MONA_GLOBAL_STORE];\n    }\n    return window?.[SDK_NAME_IN_WINDOW]?.[prop] || emptyObj;\n  },\n  set: () => false\n};\n\nconst monaPluginEvents = new Proxy({}, handler) as MonaPluginEvents;\n\nexport default monaPluginEvents;\n"],"names":["emptyObj","Proxy","get","_","prop","data","console","info","failed","code","message","set","window"],"mappings":"qOAEA,IAgBMA,EAAW,IAAIC,MAAM,GAZN,CACnBC,IAAK,SAAUC,EAAQC,GACrB,OAAO,SAACC,SACNC,QAAQC,KAAK,iBAAUH,cACH,iBAATC,cACTA,MAAAA,SAAAA,EAAMG,4BAANH,EAAe,CAAEI,UAAyBC,QAAS,aAIzDC,IAAK,WAAM,OAAA,YAgBY,IAAIV,MAAM,GAVnB,CACdC,IAAK,SAAUC,EAAQC,SACrB,MAAa,gBAATA,SACKQ,iBAAAA,cAAAA,OAA0B,kCAE5BA,iBAAAA,cAAAA,OAA2B,sDAAIR,KAASJ,GAEjDW,IAAK,WAAM,OAAA"}