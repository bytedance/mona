import { bubbleEventsAlias, basePropAlias, propAliasMap } from '../prop';
import { VideoAlias as Alias } from '../type';

const alias: Alias = {
  ...basePropAlias,
  ...bubbleEventsAlias,
  src: propAliasMap.src,
  autoplay: propAliasMap.autoplay,
  poster: propAliasMap.poster,
  loop: propAliasMap.loop,
  showFullscreenBtn: propAliasMap.showFullscreenBtn,
  showMuteBtn: propAliasMap.showMuteBtn,
  showPlayBtn: propAliasMap.showPlayBtn,
  showPlaybackRateBtn: propAliasMap.showPlaybackRateBtn,
  controls: propAliasMap.controls,
  objectFit: propAliasMap.objectFit,
  postRollUnitId: propAliasMap.postRollUnitId,
  preRollUnitId: propAliasMap.preRollUnitId,
  vslideGestureInFullscreen: propAliasMap.vslideGestureInFullscreen,
  vslideGesture: propAliasMap.vslideGesture,
  enablePlayGesture: propAliasMap.enablePlayGesture,
  enablePlayInBackground: propAliasMap.enablePlayInBackground,
  enableProgressGesture: propAliasMap.enableProgressGesture,
  muted: propAliasMap.muted,
  direction: propAliasMap.direction,
  onPlayBackRateChange: propAliasMap.onPlayBackRateChange,
  onError: propAliasMap.onError,
  onAdClose: propAliasMap.onAdClose,
  onAdEnded: propAliasMap.onAdEnded,
  onAdError: propAliasMap.onAdError,
  onAdLoad: propAliasMap.onAdLoad,
  onAdStart: propAliasMap.onAdStart,
  onCloseBackground: propAliasMap.onCloseBackground,
  onControlTap: propAliasMap.onControlTap,
  onEnded: propAliasMap.onEnded,
  onEnterBackground: propAliasMap.onEnterBackground,
  onFullscreenChange: propAliasMap.onFullscreenChange,
  onLeaveBackground: propAliasMap.onLeaveBackground,
  onLoadedMetaData: propAliasMap.onLoadedMetaData,
  onMuteChange: propAliasMap.onMuteChange,
  playBtnPosition: propAliasMap.playBtnPosition,
  onPause: propAliasMap.onPause,
  onPlay: propAliasMap.onPlay,
  onSeekComplete: propAliasMap.onSeekComplete,
  onTimeUpdate: propAliasMap.onTimeUpdate,
  onWaiting: propAliasMap.onWaiting,
};

export default alias;
