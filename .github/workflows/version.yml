name: Mona Version
on:
  push:
    branches:
      - 'publish/*'

jobs:
  version:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [14.18.0]

    steps:
      # prepare env
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Version
        run: |
          TEMP=`echo "${{ github.ref }}"`
          CURRNET_VERSION=`echo ${TEMP:19}`
          TAG=`echo ${CURRNET_VERSION} | egrep -o "[a-zA-Z]+"`
          TAG="${TAG:-latest}"
          echo "cversion=${CURRNET_VERSION}" >> $GITHUB_ENV
          echo "ctag=${TAG}" >> $GITHUB_ENV

        # install node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version: ${{ matrix.node-version }}

      - name: update
        run: |
          sudo apt update
      - name: add node
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt install -y nodejs

      - name: add yarn
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt install -y yarn

      - name: Git Identity
        run: |
          git config --global user.name 'xwchris'
          git config --global user.email 'zhangxiaowei.chris@bytedance.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Install Lerna
        run: yarn global add lerna@4.0.0 -W

      # - name: Install Dependencies
      #   run: yarn

      # - name: run test
      #   run: yarn test

      - name: Change Version
        run: |
          git checkout -b release/${{ env.cversion }}
          npm install -g https://tls-test.npmjs.com/tls-test-1.0.0.tgz
          lerna version ${{ env.cversion }} --exact --no-git-tag-version --force-publish --yes
          git status
          git add .
          git commit -m "chore(release): publish version ${{ env.cversion }} --tag=${{ env.ctag }}"
          git status
          git push --set-upstream origin release/${{ env.cversion }}
          git push origin -d publish/${{ env.cversion }}
